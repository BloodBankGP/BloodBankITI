//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BloodBankITI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BloodBankDBITIEntities : DbContext
    {
        public BloodBankDBITIEntities()
            : base("name=BloodBankDBITIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<BloodType> BloodTypes { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Comments> Comments1 { get; set; }
        public virtual DbSet<Day> Days { get; set; }
        public virtual DbSet<Emergency> Emergencies { get; set; }
        public virtual DbSet<Hospital> Hospitals { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<Needer> Needers { get; set; }
        public virtual DbSet<NGO> NGOes { get; set; }
        public virtual DbSet<Partner> Partners { get; set; }
        public virtual DbSet<PartnersStatestic> PartnersStatestics { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<Donor> Donors { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Needer_Donor> Needer_Donor { get; set; }
    
        public virtual int AcceptRequest(Nullable<int> nid, Nullable<int> did)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AcceptRequest", nidParameter, didParameter);
        }
    
        public virtual int Admins_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admins_delete", idParameter);
        }
    
        public virtual ObjectResult<Admins_select_Result> Admins_select(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admins_select_Result>("Admins_select", idParameter);
        }
    
        public virtual ObjectResult<Admins_selectt_Result> Admins_selectt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admins_selectt_Result>("Admins_selectt");
        }
    
        public virtual int Admins_update(Nullable<int> id, string fname, string lname, string username, string pw, string pic)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var picParameter = pic != null ?
                new ObjectParameter("pic", pic) :
                new ObjectParameter("pic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admins_update", idParameter, fnameParameter, lnameParameter, usernameParameter, pwParameter, picParameter);
        }
    
        public virtual int BloodTypesEdit(Nullable<int> id, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BloodTypesEdit", idParameter, typeParameter);
        }
    
        public virtual ObjectResult<BloodTypeSelectByID_Result> BloodTypeSelectByID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BloodTypeSelectByID_Result>("BloodTypeSelectByID", idParameter);
        }
    
        public virtual int BloodTypesInsert(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BloodTypesInsert", typeParameter);
        }
    
        public virtual ObjectResult<CheckLogin_Result> CheckLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckLogin_Result>("CheckLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<CheckName_Result> CheckName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckName_Result>("CheckName", usernameParameter);
        }
    
        public virtual int Cities_DeleteCity(Nullable<int> cID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cities_DeleteCity", cIDParameter);
        }
    
        public virtual int Cities_InsertCity(string cityName, string logo)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cities_InsertCity", cityNameParameter, logoParameter);
        }
    
        public virtual ObjectResult<Cities_SelectAll_Result> Cities_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cities_SelectAll_Result>("Cities_SelectAll");
        }
    
        public virtual ObjectResult<Cities_SelectBYID_Result> Cities_SelectBYID(Nullable<int> cID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cities_SelectBYID_Result>("Cities_SelectBYID", cIDParameter);
        }
    
        public virtual int Cities_UpdateCity(string cityName, Nullable<int> cID)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cities_UpdateCity", cityNameParameter, cIDParameter);
        }
    
        public virtual int CommentDelete(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CommentDelete", cidParameter);
        }
    
        public virtual int Comments_insert(Nullable<int> post_id, string name, string comment)
        {
            var post_idParameter = post_id.HasValue ?
                new ObjectParameter("post_id", post_id) :
                new ObjectParameter("post_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Comments_insert", post_idParameter, nameParameter, commentParameter);
        }
    
        public virtual ObjectResult<Comments_SelectAllByPostID_Result> Comments_SelectAllByPostID(Nullable<int> post_id)
        {
            var post_idParameter = post_id.HasValue ?
                new ObjectParameter("post_id", post_id) :
                new ObjectParameter("post_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Comments_SelectAllByPostID_Result>("Comments_SelectAllByPostID", post_idParameter);
        }
    
        public virtual int delete_Needer(Nullable<int> nID)
        {
            var nIDParameter = nID.HasValue ?
                new ObjectParameter("NID", nID) :
                new ObjectParameter("NID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_Needer", nIDParameter);
        }
    
        public virtual int Donor_insertPartner(Nullable<int> pAID, Nullable<int> dID)
        {
            var pAIDParameter = pAID.HasValue ?
                new ObjectParameter("PAID", pAID) :
                new ObjectParameter("PAID", typeof(int));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Donor_insertPartner", pAIDParameter, dIDParameter);
        }
    
        public virtual ObjectResult<donor_SelectByDID_Result> donor_SelectByDID(Nullable<int> did)
        {
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<donor_SelectByDID_Result>("donor_SelectByDID", didParameter);
        }
    
        public virtual int donor_updatepending(Nullable<int> dID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("donor_updatepending", dIDParameter);
        }
    
        public virtual int DonorBloodType(Nullable<int> bID, Nullable<int> donorID)
        {
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var donorIDParameter = donorID.HasValue ?
                new ObjectParameter("DonorID", donorID) :
                new ObjectParameter("DonorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DonorBloodType", bIDParameter, donorIDParameter);
        }
    
        public virtual ObjectResult<DonorByBloodCity_Result> DonorByBloodCity(Nullable<int> cid, Nullable<int> bid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DonorByBloodCity_Result>("DonorByBloodCity", cidParameter, bidParameter);
        }
    
        public virtual int Donors_Delete(Nullable<int> dID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Donors_Delete", dIDParameter);
        }
    
        public virtual ObjectResult<Donors_select_Result> Donors_select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Donors_select_Result>("Donors_select");
        }
    
        public virtual ObjectResult<Donors_SelectAll_Result> Donors_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Donors_SelectAll_Result>("Donors_SelectAll");
        }
    
        public virtual ObjectResult<Donors_SelectID_Result> Donors_SelectID(Nullable<int> cID, Nullable<int> bID, Nullable<int> lID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var lIDParameter = lID.HasValue ?
                new ObjectParameter("LID", lID) :
                new ObjectParameter("LID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Donors_SelectID_Result>("Donors_SelectID", cIDParameter, bIDParameter, lIDParameter);
        }
    
        public virtual int Donors_UpdateID(string fname, string lname, string phone, Nullable<int> bID, Nullable<int> cID, Nullable<int> lID, Nullable<int> dID, string gender, string username, string pw)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var lIDParameter = lID.HasValue ?
                new ObjectParameter("LID", lID) :
                new ObjectParameter("LID", typeof(int));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Donors_UpdateID", fnameParameter, lnameParameter, phoneParameter, bIDParameter, cIDParameter, lIDParameter, dIDParameter, genderParameter, usernameParameter, pwParameter);
        }
    
        public virtual int EmergencyDelete(Nullable<int> dayid, Nullable<int> cid)
        {
            var dayidParameter = dayid.HasValue ?
                new ObjectParameter("dayid", dayid) :
                new ObjectParameter("dayid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmergencyDelete", dayidParameter, cidParameter);
        }
    
        public virtual int EmergencyInsert(Nullable<int> dayid, Nullable<int> cid, Nullable<int> hid)
        {
            var dayidParameter = dayid.HasValue ?
                new ObjectParameter("dayid", dayid) :
                new ObjectParameter("dayid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var hidParameter = hid.HasValue ?
                new ObjectParameter("hid", hid) :
                new ObjectParameter("hid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmergencyInsert", dayidParameter, cidParameter, hidParameter);
        }
    
        public virtual ObjectResult<EmergencySelectAll_Result> EmergencySelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmergencySelectAll_Result>("EmergencySelectAll");
        }
    
        public virtual ObjectResult<EmergencySelectCityDay_Result> EmergencySelectCityDay(Nullable<int> dayid, Nullable<int> cid)
        {
            var dayidParameter = dayid.HasValue ?
                new ObjectParameter("dayid", dayid) :
                new ObjectParameter("dayid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmergencySelectCityDay_Result>("EmergencySelectCityDay", dayidParameter, cidParameter);
        }
    
        public virtual int EmergencyUpdate(Nullable<int> dayid, Nullable<int> cid, Nullable<int> hid)
        {
            var dayidParameter = dayid.HasValue ?
                new ObjectParameter("dayid", dayid) :
                new ObjectParameter("dayid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var hidParameter = hid.HasValue ?
                new ObjectParameter("hid", hid) :
                new ObjectParameter("hid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmergencyUpdate", dayidParameter, cidParameter, hidParameter);
        }
    
        public virtual ObjectResult<GetPartnersDonor_Result> GetPartnersDonor(Nullable<int> pAID)
        {
            var pAIDParameter = pAID.HasValue ?
                new ObjectParameter("PAID", pAID) :
                new ObjectParameter("PAID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPartnersDonor_Result>("GetPartnersDonor", pAIDParameter);
        }
    
        public virtual ObjectResult<GetStatestics_Result> GetStatestics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStatestics_Result>("GetStatestics");
        }
    
        public virtual ObjectResult<GetTodayStatestics_Result> GetTodayStatestics(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTodayStatestics_Result>("GetTodayStatestics", pidParameter);
        }
    
        public virtual int Hospitals_DeleteHospital(Nullable<int> hID)
        {
            var hIDParameter = hID.HasValue ?
                new ObjectParameter("HID", hID) :
                new ObjectParameter("HID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Hospitals_DeleteHospital", hIDParameter);
        }
    
        public virtual int Hospitals_InsertHospital(string name, Nullable<int> cID, string phone, string address)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Hospitals_InsertHospital", nameParameter, cIDParameter, phoneParameter, addressParameter);
        }
    
        public virtual ObjectResult<Hospitals_SelectAll_Result> Hospitals_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hospitals_SelectAll_Result>("Hospitals_SelectAll");
        }
    
        public virtual ObjectResult<Hospitals_SelectByCity_Result> Hospitals_SelectByCity(Nullable<int> cID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hospitals_SelectByCity_Result>("Hospitals_SelectByCity", cIDParameter);
        }
    
        public virtual ObjectResult<Hospitals_SelectByID_Result> Hospitals_SelectByID(Nullable<int> hid)
        {
            var hidParameter = hid.HasValue ?
                new ObjectParameter("hid", hid) :
                new ObjectParameter("hid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hospitals_SelectByID_Result>("Hospitals_SelectByID", hidParameter);
        }
    
        public virtual int Hospitals_UpdateHospital(string name, Nullable<int> cID, string phone, string address, Nullable<int> hID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var hIDParameter = hID.HasValue ?
                new ObjectParameter("HID", hID) :
                new ObjectParameter("HID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Hospitals_UpdateHospital", nameParameter, cIDParameter, phoneParameter, addressParameter, hIDParameter);
        }
    
        public virtual int insert_needer(string email, string fname, string lname, Nullable<int> bID, Nullable<int> cID, string phone)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_needer", emailParameter, fnameParameter, lnameParameter, bIDParameter, cIDParameter, phoneParameter);
        }
    
        public virtual int Locations_DeleteLocation(Nullable<int> cID, Nullable<int> lID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var lIDParameter = lID.HasValue ?
                new ObjectParameter("LID", lID) :
                new ObjectParameter("LID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Locations_DeleteLocation", cIDParameter, lIDParameter);
        }
    
        public virtual int Locations_InsertLocation(Nullable<int> cID, string locationName)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Locations_InsertLocation", cIDParameter, locationNameParameter);
        }
    
        public virtual ObjectResult<Locations_SelectAllByCityID_Result> Locations_SelectAllByCityID(Nullable<int> cID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Locations_SelectAllByCityID_Result>("Locations_SelectAllByCityID", cIDParameter);
        }
    
        public virtual ObjectResult<Locations_SelectBYCityID_LocationID_Result> Locations_SelectBYCityID_LocationID(Nullable<int> cID, Nullable<int> lID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var lIDParameter = lID.HasValue ?
                new ObjectParameter("LID", lID) :
                new ObjectParameter("LID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Locations_SelectBYCityID_LocationID_Result>("Locations_SelectBYCityID_LocationID", cIDParameter, lIDParameter);
        }
    
        public virtual int Locations_UpdateLocation(string locationName, Nullable<int> lID, Nullable<int> cID)
        {
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var lIDParameter = lID.HasValue ?
                new ObjectParameter("LID", lID) :
                new ObjectParameter("LID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Locations_UpdateLocation", locationNameParameter, lIDParameter, cIDParameter);
        }
    
        public virtual int Login_delete(Nullable<int> user, Nullable<int> type)
        {
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Login_delete", userParameter, typeParameter);
        }
    
        public virtual int Login_insert(string username, string pw, Nullable<int> type, Nullable<int> user)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Login_insert", usernameParameter, pwParameter, typeParameter, userParameter);
        }
    
        public virtual ObjectResult<Login_select_Result> Login_select(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_select_Result>("Login_select", idParameter);
        }
    
        public virtual ObjectResult<Login_selectt_Result> Login_selectt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_selectt_Result>("Login_selectt");
        }
    
        public virtual int Login_update(string username, string pw, Nullable<int> type, Nullable<int> user)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Login_update", usernameParameter, pwParameter, typeParameter, userParameter);
        }
    
        public virtual ObjectResult<Needer_Donorall_Result> Needer_Donorall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Needer_Donorall_Result>("Needer_Donorall");
        }
    
        public virtual int Needer_DonorInsert(Nullable<int> nid, Nullable<int> bid, Nullable<int> cid, Nullable<int> did)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Needer_DonorInsert", nidParameter, bidParameter, cidParameter, didParameter);
        }
    
        public virtual ObjectResult<Needer_DonorNotAccepted_Result> Needer_DonorNotAccepted(Nullable<int> nid, Nullable<int> did)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Needer_DonorNotAccepted_Result>("Needer_DonorNotAccepted", nidParameter, didParameter);
        }
    
        public virtual int NGO_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NGO_delete", idParameter);
        }
    
        public virtual int NGO_insert(string name, Nullable<int> city, string phone, string address, string username, string pw, string fb, string website)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var fbParameter = fb != null ?
                new ObjectParameter("fb", fb) :
                new ObjectParameter("fb", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NGO_insert", nameParameter, cityParameter, phoneParameter, addressParameter, usernameParameter, pwParameter, fbParameter, websiteParameter);
        }
    
        public virtual ObjectResult<NGO_select_Result> NGO_select(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGO_select_Result>("NGO_select", cidParameter);
        }
    
        public virtual ObjectResult<NGO_selectByID_Result> NGO_selectByID(Nullable<int> nid)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGO_selectByID_Result>("NGO_selectByID", nidParameter);
        }
    
        public virtual ObjectResult<NGO_selectByIDAll_Result> NGO_selectByIDAll(Nullable<int> nid)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGO_selectByIDAll_Result>("NGO_selectByIDAll", nidParameter);
        }
    
        public virtual ObjectResult<NGO_selectt_Result> NGO_selectt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGO_selectt_Result>("NGO_selectt");
        }
    
        public virtual int NGO_update(Nullable<int> id, string name, Nullable<int> city, string phone, string address, string username, string pw, string fb, string website)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var fbParameter = fb != null ?
                new ObjectParameter("fb", fb) :
                new ObjectParameter("fb", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NGO_update", idParameter, nameParameter, cityParameter, phoneParameter, addressParameter, usernameParameter, pwParameter, fbParameter, websiteParameter);
        }
    
        public virtual int NGOUPDATEADMIN(Nullable<int> id, string name, Nullable<int> city, string phone, string address, Nullable<bool> status, Nullable<bool> approved, string fb, string website)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("approved", approved) :
                new ObjectParameter("approved", typeof(bool));
    
            var fbParameter = fb != null ?
                new ObjectParameter("fb", fb) :
                new ObjectParameter("fb", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NGOUPDATEADMIN", idParameter, nameParameter, cityParameter, phoneParameter, addressParameter, statusParameter, approvedParameter, fbParameter, websiteParameter);
        }
    
        public virtual int Partners_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Partners_delete", idParameter);
        }
    
        public virtual int Partners_insert(string name, string address, Nullable<int> cid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Partners_insert", nameParameter, addressParameter, cidParameter);
        }
    
        public virtual ObjectResult<Partners_select_Result> Partners_select(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Partners_select_Result>("Partners_select", idParameter);
        }
    
        public virtual ObjectResult<Partners_selectt_Result> Partners_selectt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Partners_selectt_Result>("Partners_selectt");
        }
    
        public virtual int Partners_update(Nullable<int> id, string name, string address, Nullable<bool> status, Nullable<int> cid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Partners_update", idParameter, nameParameter, addressParameter, statusParameter, cidParameter);
        }
    
        public virtual int PartnerStatestics_delete(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PartnerStatestics_delete", sidParameter);
        }
    
        public virtual int PartnerStatestics_insert(Nullable<int> pid, Nullable<int> did)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PartnerStatestics_insert", pidParameter, didParameter);
        }
    
        public virtual int PartnerStatestics_select(Nullable<System.DateTime> date, Nullable<int> partner)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var partnerParameter = partner.HasValue ?
                new ObjectParameter("partner", partner) :
                new ObjectParameter("partner", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PartnerStatestics_select", dateParameter, partnerParameter);
        }
    
        public virtual int PartnerStatestics_selectt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PartnerStatestics_selectt");
        }
    
        public virtual int posts_DeletePost(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("posts_DeletePost", pIDParameter);
        }
    
        public virtual ObjectResult<Posts_GetPostByID_Result> Posts_GetPostByID(Nullable<int> post_id)
        {
            var post_idParameter = post_id.HasValue ?
                new ObjectParameter("post_id", post_id) :
                new ObjectParameter("post_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Posts_GetPostByID_Result>("Posts_GetPostByID", post_idParameter);
        }
    
        public virtual int posts_InsertPost(string post, string phone, Nullable<int> bID, Nullable<int> cID, string name, Nullable<bool> periodic)
        {
            var postParameter = post != null ?
                new ObjectParameter("post", post) :
                new ObjectParameter("post", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var periodicParameter = periodic.HasValue ?
                new ObjectParameter("periodic", periodic) :
                new ObjectParameter("periodic", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("posts_InsertPost", postParameter, phoneParameter, bIDParameter, cIDParameter, nameParameter, periodicParameter);
        }
    
        public virtual ObjectResult<posts_SelectAll_Result> posts_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<posts_SelectAll_Result>("posts_SelectAll");
        }
    
        public virtual ObjectResult<posts_SelectByBID_CID_Result> posts_SelectByBID_CID(Nullable<int> bID, Nullable<int> cID)
        {
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<posts_SelectByBID_CID_Result>("posts_SelectByBID_CID", bIDParameter, cIDParameter);
        }
    
        public virtual ObjectResult<returDonorData_Result> returDonorData(Nullable<int> did, Nullable<int> nid)
        {
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<returDonorData_Result>("returDonorData", didParameter, nidParameter);
        }
    
        public virtual ObjectResult<Select_BloodTypes_Result> Select_BloodTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_BloodTypes_Result>("Select_BloodTypes");
        }
    
        public virtual ObjectResult<Select_BloodTypesID_Result> Select_BloodTypesID(Nullable<int> bID)
        {
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_BloodTypesID_Result>("Select_BloodTypesID", bIDParameter);
        }
    
        public virtual ObjectResult<Select_Days_Result> Select_Days(Nullable<int> dID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Days_Result>("Select_Days", dIDParameter);
        }
    
        public virtual ObjectResult<Select_DaysALL_Result> Select_DaysALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_DaysALL_Result>("Select_DaysALL");
        }
    
        public virtual ObjectResult<Select_Needer_Result> Select_Needer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Needer_Result>("Select_Needer");
        }
    
        public virtual ObjectResult<select_NeederID_Result> select_NeederID(Nullable<int> nID)
        {
            var nIDParameter = nID.HasValue ?
                new ObjectParameter("NID", nID) :
                new ObjectParameter("NID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_NeederID_Result>("select_NeederID", nIDParameter);
        }
    
        public virtual ObjectResult<SelectCityLocations_Result> SelectCityLocations(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCityLocations_Result>("SelectCityLocations", idParameter);
        }
    
        public virtual ObjectResult<SelectHospitalByID_Result> SelectHospitalByID(Nullable<int> hospitalID)
        {
            var hospitalIDParameter = hospitalID.HasValue ?
                new ObjectParameter("hospitalID", hospitalID) :
                new ObjectParameter("hospitalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectHospitalByID_Result>("SelectHospitalByID", hospitalIDParameter);
        }
    
        public virtual ObjectResult<selectneederallinfo_Result> selectneederallinfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectneederallinfo_Result>("selectneederallinfo");
        }
    
        public virtual ObjectResult<selectNeederByBlood_Result> selectNeederByBlood(Nullable<int> bid)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectNeederByBlood_Result>("selectNeederByBlood", bidParameter);
        }
    
        public virtual ObjectResult<selectNeederByCity_Result> selectNeederByCity(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectNeederByCity_Result>("selectNeederByCity", cidParameter);
        }
    
        public virtual ObjectResult<selectNeederByCityBlood_Result> selectNeederByCityBlood(Nullable<int> cid, Nullable<int> bid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectNeederByCityBlood_Result>("selectNeederByCityBlood", cidParameter, bidParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Update_Needer(string email, string fname, string lname, Nullable<int> bID, Nullable<int> cID, Nullable<int> nID)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var nIDParameter = nID.HasValue ?
                new ObjectParameter("NID", nID) :
                new ObjectParameter("NID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Needer", emailParameter, fnameParameter, lnameParameter, bIDParameter, cIDParameter, nIDParameter);
        }
    
        public virtual int UserType_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserType_delete", idParameter);
        }
    
        public virtual int UserType_insert(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserType_insert", typeParameter);
        }
    
        public virtual ObjectResult<UserType_select_Result> UserType_select(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserType_select_Result>("UserType_select", idParameter);
        }
    
        public virtual ObjectResult<UserType_selectt_Result> UserType_selectt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserType_selectt_Result>("UserType_selectt");
        }
    
        public virtual int UserType_update(string type, Nullable<int> id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserType_update", typeParameter, idParameter);
        }
    
        public virtual ObjectResult<GetAllLabStatestics_Result> GetAllLabStatestics(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllLabStatestics_Result>("GetAllLabStatestics", pidParameter);
        }
    
        public virtual ObjectResult<GetAllTodayStatestics_Result> GetAllTodayStatestics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTodayStatestics_Result>("GetAllTodayStatestics");
        }
    
        public virtual ObjectResult<AskForBlood_Result> AskForBlood(Nullable<int> bid, Nullable<int> cid)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AskForBlood_Result>("AskForBlood", bidParameter, cidParameter);
        }
    
        public virtual ObjectResult<Partner_SelectByCity_Result> Partner_SelectByCity(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Partner_SelectByCity_Result>("Partner_SelectByCity", cidParameter);
        }
    
        public virtual ObjectResult<DonorByBid_Result> DonorByBid(Nullable<int> bid)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DonorByBid_Result>("DonorByBid", bidParameter);
        }
    
        public virtual int CancelRequest(Nullable<int> nid, Nullable<int> did)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelRequest", nidParameter, didParameter);
        }
    
        public virtual ObjectResult<DonorRequests_Result> DonorRequests(Nullable<int> did)
        {
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DonorRequests_Result>("DonorRequests", didParameter);
        }
    
        public virtual int ApproveNGO(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApproveNGO", idParameter);
        }
    
        public virtual ObjectResult<NotApprovedNGO_Result> NotApprovedNGO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotApprovedNGO_Result>("NotApprovedNGO");
        }
    
        public virtual ObjectResult<Nullable<int>> Donors_Insert(string fname, string lname, string gender, string phone, Nullable<int> bID, Nullable<int> cID, Nullable<int> lID, Nullable<bool> status, Nullable<bool> pending, Nullable<System.DateTime> donationDate, Nullable<int> pID, string username, string password)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var bIDParameter = bID.HasValue ?
                new ObjectParameter("BID", bID) :
                new ObjectParameter("BID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var lIDParameter = lID.HasValue ?
                new ObjectParameter("LID", lID) :
                new ObjectParameter("LID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var pendingParameter = pending.HasValue ?
                new ObjectParameter("pending", pending) :
                new ObjectParameter("pending", typeof(bool));
    
            var donationDateParameter = donationDate.HasValue ?
                new ObjectParameter("donationDate", donationDate) :
                new ObjectParameter("donationDate", typeof(System.DateTime));
    
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Donors_Insert", fnameParameter, lnameParameter, genderParameter, phoneParameter, bIDParameter, cIDParameter, lIDParameter, statusParameter, pendingParameter, donationDateParameter, pIDParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int ContactDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactDelete", idParameter);
        }
    
        public virtual int ContactInsert(string fname, string lname, Nullable<int> age, string city, string email, string msg)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactInsert", fnameParameter, lnameParameter, ageParameter, cityParameter, emailParameter, msgParameter);
        }
    
        public virtual ObjectResult<ContactSelect_Result> ContactSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContactSelect_Result>("ContactSelect");
        }
    
        public virtual ObjectResult<GetContact_Result> GetContact(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContact_Result>("GetContact", idParameter);
        }
    
        public virtual ObjectResult<string> CheckUsernames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckUsernames");
        }
    
        public virtual ObjectResult<neederdonorall_Result> neederdonorall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<neederdonorall_Result>("neederdonorall");
        }
    
        public virtual int Admins_insert(string fname, string lname, string username, string pw, string pic)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var picParameter = pic != null ?
                new ObjectParameter("pic", pic) :
                new ObjectParameter("pic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admins_insert", fnameParameter, lnameParameter, usernameParameter, pwParameter, picParameter);
        }
    
        public virtual ObjectResult<Needer_DonorAccepted_Result> Needer_DonorAccepted(Nullable<int> nid, string name)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Needer_DonorAccepted_Result>("Needer_DonorAccepted", nidParameter, nameParameter);
        }
    }
}
